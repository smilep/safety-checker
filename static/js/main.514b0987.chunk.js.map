{"version":3,"sources":["assets/no.gif","components/Loader.js","components/Home.js","App.js","serviceWorker.js","index.js","assets/maybe.gif"],"names":["module","exports","Loader","Spinner","animation","role","className","React","Component","Home","props","loadData","fetch","process","then","res","json","result","sort","a","b","Slug","localeCompare","setState","countries","response","ok","Error","statusText","data","done","catch","error","alert","handleCountryChange","selectedUserCountries","userEnteredCountry","selectedCountry","state","Countries","filter","item","activeCases","TotalConfirmed","TotalRecovered","date","Date","dateStr","toDateString","toLocaleTimeString","lastUpdated","Country","ref","current","clear","blur","message","createRef","this","initializeReactGA","ReactGA","initialize","pageview","optionItems","i","length","push","Form","Group","controlId","id","multiple","onChange","placeholder","options","labelKey","Alert","variant","Image","src","no","fluid","Badge","pill","maybe","App","href","target","rel","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","origin","addEventListener","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"2GAAAA,EAAOC,QAAU,IAA0B,gC,2RCc5BC,E,uKARX,OACE,kBAACC,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,UAC/B,0BAAMC,UAAU,WAAhB,gBAA8C,S,GAJjCC,IAAMC,W,mCC+KZC,E,kDAzKb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAqBRC,SAAW,WAETC,MAAMC,wCACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLA,EAAOC,MAAK,SAAUC,EAAGC,GACvB,OAAOD,EAAEE,KAAKC,cAAcF,EAAEC,SAEhC,EAAKE,SAAS,CACZC,UAAWP,OAGdH,MAAK,WAEJF,MAAMC,sCACHC,MAAK,SAACW,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,YAE3B,OAAOH,KAERX,MAAK,SAACW,GAAD,OAAcA,EAAST,UAC5BF,MAAK,SAACG,GACL,EAAKM,SAAS,CACZM,KAAMZ,EACNa,MAAM,OAGTC,OAAM,SAACC,GACNC,MAAMD,UAnDG,EAwDnBE,oBAAsB,SAACC,GACrB,IAAMC,EAAqBD,EAAsB,GACjD,GAAKC,EAAL,CAGA,IAMIC,EANoB,EAAKC,MAAMT,KAAKU,UAAUC,QAAO,SAACC,GACxD,OAAIL,EAAmBf,KACdoB,EAAKpB,OAASe,EAAmBf,KAEnC,QAE+B,GACxC,GAAIgB,EAAiB,CACnBA,EAAgBK,YACdL,EAAgBM,eAAiBN,EAAgBO,eACnD,IAAMC,EAAO,IAAIC,KAAKT,EAAgBS,MAChCC,EAAUF,EAAKG,eAAiB,IAAMH,EAAKI,qBACjD,EAAK1B,SAAS,CACZc,gBAAiBA,EACjBa,YAAaH,SAGfV,EAAkB,CAChBK,YAAa,KACbS,QAASf,EAAmBe,SAE9B,EAAK5B,SAAS,CACZc,gBAAiBA,EACjBa,YAAa,OAGjB,EAAKE,IAAIC,QAAQC,QACjB,EAAKF,IAAIC,QAAQE,SAtFjB,EAAKjB,MAAQ,CACXkB,QAAS,6CACT1B,MAAM,EACNoB,YAAa,GACb1B,UAAW,GACXK,KAAM,IAER,EAAKuB,IAAM7C,IAAMkD,YATA,E,gEAajBC,KAAK/C,WACL+C,KAAKC,sB,0CAILC,IAAQC,WAAW,kBACnBD,IAAQE,SAAS,e,+BA0EjB,IADA,IAAIC,EAAc,GACTC,EAAI,EAAGA,EAAIN,KAAKpB,MAAMd,UAAUyC,OAAQD,IAC/CD,EAAYG,KAAK,oCAAUR,KAAKpB,MAAMd,UAAUwC,GAA/B,MAEnB,OACE,6BACE,gCAAMN,KAAKpB,MAAMkB,QAAjB,MACEE,KAAKpB,MAAMR,MAAQ,kBAAC,EAAD,MAGpB4B,KAAKpB,MAAMR,MACV,kBAACqC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,0BACpB,kBAAC,IAAD,CACEC,GAAG,gBACHC,UAAU,EACVC,SAAUd,KAAKxB,oBACfuC,YAAY,sBACZC,QAAShB,KAAKpB,MAAMd,UACpBmD,SAAS,UACTvB,IAAKM,KAAKN,QAOjBM,KAAKpB,MAAMD,iBACVqB,KAAKpB,MAAMD,gBAAgBc,SAC3BO,KAAKpB,MAAMD,gBAAgBK,YAAc,GACvC,6BACE,kBAACkC,EAAA,EAAD,CAAOC,QAAQ,UACZnB,KAAKpB,MAAMD,gBAAgBc,QAD9B,OAC2C,IACzC,2BAAIO,KAAKpB,MAAMD,gBAAgBK,aAFjC,gDAKA,kBAACoC,EAAA,EAAD,CAAOC,IAAKC,IAAIC,OAAK,IANvB,IAM2B,6BACzB,kBAACC,EAAA,EAAD,CAAOC,MAAI,EAACN,QAAQ,QAApB,wBACwBnB,KAAKpB,MAAMY,cAKxCQ,KAAKpB,MAAMD,iBACVqB,KAAKpB,MAAMD,gBAAgBc,SACe,MAA1CO,KAAKpB,MAAMD,gBAAgBK,aAC3BgB,KAAKpB,MAAMD,gBAAgBK,YAAc,GACvC,6BACE,kBAACkC,EAAA,EAAD,CAAOC,QAAQ,WACZnB,KAAKpB,MAAMD,gBAAgBc,QAD9B,QAC2C,iCAD3C,6FAKA,kBAAC2B,EAAA,EAAD,CAAOC,IAAKK,IAAOH,OAAK,IAN1B,IAM8B,6BAC5B,kBAACC,EAAA,EAAD,CAAOC,MAAI,EAACN,QAAQ,QAApB,wBACwBnB,KAAKpB,MAAMY,cAKxCQ,KAAKpB,MAAMD,iBACVqB,KAAKpB,MAAMD,gBAAgBc,UAC1BO,KAAKpB,MAAMD,gBAAgBK,aAC1B,6BACE,kBAACkC,EAAA,EAAD,CAAOC,QAAQ,WAAf,qCACqC,IAClCnB,KAAKpB,MAAMD,gBAAgBc,QAF9B,0CAKA,kBAAC2B,EAAA,EAAD,CAAOC,IAAKK,IAAOH,OAAK,IAN1B,IAM8B,mC,GAlKvB1E,IAAMC,WC2BV6E,MAhCf,WACE,OACE,yBAAK/E,UAAU,aACb,6BACA,yBAAKA,UAAU,YACb,kBAAC,EAAD,OAEF,6BACA,yBAAKA,UAAU,YACb,0BAAMA,UAAU,kBAAhB,qDACqD,IACnD,uBACEgF,KAAK,6CACLC,OAAO,SACPC,IAAI,uBAHN,sBAFF,6BAS6B,IAC3B,uBACEF,KAAK,2CACLC,OAAO,SACPC,IAAI,uBAHN,UAVF,QCDFC,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTlF,MAAK,SAAAuF,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBjE,QACf4D,UAAUC,cAAcO,YAI1BC,QAAQC,IACN,iHAKEX,GAAUA,EAAOY,UACnBZ,EAAOY,SAASR,KAMlBM,QAAQC,IAAI,sCAGRX,GAAUA,EAAOa,WACnBb,EAAOa,UAAUT,WAO5BtE,OAAM,SAAAC,GACL2E,QAAQ3E,MAAM,4CAA6CA,M,OCtFjE+E,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDQnB,SAAkBlB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIkB,IAAIvG,kBAAwB8E,OAAOC,SAASN,MACpD+B,SAAW1B,OAAOC,SAASyB,OAIvC,OAGF1B,OAAO2B,iBAAiB,QAAQ,WAC9B,IAAMtB,EAAK,UAAMnF,kBAAN,sBAEP4E,IAgEV,SAAiCO,EAAOC,GAEtCrF,MAAMoF,EAAO,CACXuB,QAAS,CAAE,iBAAkB,YAE5BzG,MAAK,SAAAW,GAEJ,IAAM+F,EAAc/F,EAAS8F,QAAQE,IAAI,gBAEnB,MAApBhG,EAASiG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5CzB,UAAUC,cAAcyB,MAAM9G,MAAK,SAAAuF,GACjCA,EAAawB,aAAa/G,MAAK,WAC7B6E,OAAOC,SAASkC,eAKpB/B,EAAgBC,EAAOC,MAG1BlE,OAAM,WACL4E,QAAQC,IACN,oEAvFAmB,CAAwB/B,EAAOC,GAI/BC,UAAUC,cAAcyB,MAAM9G,MAAK,WACjC6F,QAAQC,IACN,iHAMJb,EAAgBC,EAAOC,OC9B/BE,I,mBCpBAnG,EAAOC,QAAU,IAA0B,oC","file":"static/js/main.514b0987.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/no.edeb6af2.gif\";","import React from \"react\";\n\nimport Spinner from \"react-bootstrap/Spinner\";\n\nclass Loader extends React.Component {\n  render() {\n    return (\n      <Spinner animation=\"border\" role=\"status\">\n        <span className=\"sr-only\"> Loading... </span>{\" \"}\n      </Spinner>\n    );\n  }\n}\n\nexport default Loader;","import React from \"react\";\nimport ReactGA from \"react-ga\";\nimport { Alert, Form, Badge, Image } from \"react-bootstrap\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\n\nimport Loader from \"./Loader\";\nimport no from \"../assets/no.gif\";\nimport maybe from \"../assets/maybe.gif\";\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: \"Should I stop taking COVID-19 precautions?\",\n      done: false,\n      lastUpdated: \"\",\n      countries: [],\n      data: {},\n    };\n    this.ref = React.createRef();\n  }\n\n  componentDidMount() {\n    this.loadData();\n    this.initializeReactGA();\n  }\n\n  initializeReactGA() {\n    ReactGA.initialize(\"UA-164046110-1\");\n    ReactGA.pageview(\"/homepage\");\n  }\n\n  loadData = () => {\n    // fetch countries\n    fetch(process.env.REACT_APP_COUNTRIES_API)\n      .then((res) => res.json())\n      .then((result) => {\n        result.sort(function (a, b) {\n          return a.Slug.localeCompare(b.Slug);\n        });\n        this.setState({\n          countries: result,\n        });\n      })\n      .then(() => {\n        // fetch stats summary of all countries\n        fetch(process.env.REACT_APP_SUMMARY_API)\n          .then((response) => {\n            if (!response.ok) {\n              throw new Error(response.statusText);\n            }\n            return response;\n          })\n          .then((response) => response.json())\n          .then((result) => {\n            this.setState({\n              data: result,\n              done: true,\n            });\n          })\n          .catch((error) => {\n            alert(error);\n          });\n      });\n  };\n\n  handleCountryChange = (selectedUserCountries) => {\n    const userEnteredCountry = selectedUserCountries[0];\n    if (!userEnteredCountry) {\n      return;\n    }\n    let selectedCountries = this.state.data.Countries.filter((item) => {\n      if (userEnteredCountry.Slug) {\n        return item.Slug === userEnteredCountry.Slug;\n      }\n      return null;\n    });\n    let selectedCountry = selectedCountries[0];\n    if (selectedCountry) {\n      selectedCountry.activeCases =\n        selectedCountry.TotalConfirmed - selectedCountry.TotalRecovered;\n      const date = new Date(selectedCountry.Date);\n      const dateStr = date.toDateString() + \" \" + date.toLocaleTimeString();\n      this.setState({\n        selectedCountry: selectedCountry,\n        lastUpdated: dateStr,\n      });\n    } else {\n      selectedCountry = {\n        activeCases: null,\n        Country: userEnteredCountry.Country,\n      };\n      this.setState({\n        selectedCountry: selectedCountry,\n        lastUpdated: null,\n      });\n    }\n    this.ref.current.clear();\n    this.ref.current.blur();\n  };\n\n  render() {\n    let optionItems = [];\n    for (var i = 0; i < this.state.countries.length; i++) {\n      optionItems.push(<option> {this.state.countries[i]} </option>);\n    }\n    return (\n      <div>\n        <h1> {this.state.message} </h1>\n        {!this.state.done && <Loader />}\n\n        {/* Main form */}\n        {this.state.done && (\n          <Form>\n            <Form.Group controlId=\"mainForm.SelectCountry\">\n              <Typeahead\n                id=\"selectCountry\"\n                multiple={false}\n                onChange={this.handleCountryChange}\n                placeholder=\"Choose a Country...\"\n                options={this.state.countries}\n                labelKey=\"Country\"\n                ref={this.ref}\n              />\n            </Form.Group>\n          </Form>\n        )}\n\n        {/* Display result */}\n        {this.state.selectedCountry &&\n          this.state.selectedCountry.Country &&\n          this.state.selectedCountry.activeCases > 0 && (\n            <div>\n              <Alert variant=\"danger\">\n                {this.state.selectedCountry.Country} has{\" \"}\n                <b>{this.state.selectedCountry.activeCases}</b> active COVID-19\n                cases. Please don't go out!\n              </Alert>\n              <Image src={no} fluid /> <br />\n              <Badge pill variant=\"dark\">\n                Data last updated at {this.state.lastUpdated}\n              </Badge>\n            </div>\n          )}\n\n        {this.state.selectedCountry &&\n          this.state.selectedCountry.Country &&\n          this.state.selectedCountry.activeCases != null &&\n          this.state.selectedCountry.activeCases < 1 && (\n            <div>\n              <Alert variant=\"success\">\n                {this.state.selectedCountry.Country} has <b>no</b> active\n                COVID-19 cases. You can go out but follow guidelines issued by\n                local authorities.\n              </Alert>\n              <Image src={maybe} fluid /> <br />\n              <Badge pill variant=\"dark\">\n                Data last updated at {this.state.lastUpdated}\n              </Badge>\n            </div>\n          )}\n\n        {this.state.selectedCountry &&\n          this.state.selectedCountry.Country &&\n          !this.state.selectedCountry.activeCases && (\n            <div>\n              <Alert variant=\"success\">\n                COVID-19 data is not available for{\" \"}\n                {this.state.selectedCountry.Country}. Please check with local\n                authorities.\n              </Alert>\n              <Image src={maybe} fluid /> <br />\n            </div>\n          )}\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport \"./App.css\";\nimport Home from \"./components/Home\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <hr />\n      <div className=\"col-md-7\">\n        <Home />\n      </div>\n      <hr />\n      <div className=\"col-md-7\">\n        <span className=\"developer-text\">\n          This is not an official website. Data sourced from{\" \"}\n          <a\n            href=\"https://github.com/CSSEGISandData/COVID-19\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Johns Hopkins CSSE\n          </a>\n          . Source code available at{\" \"}\n          <a\n            href=\"https://github.com/smilep/safety-checker\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            GitHub\n          </a>.\n        </span>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11'; \n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/maybe.c6609bcc.gif\";"],"sourceRoot":""}